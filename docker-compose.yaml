services:
  s3:
    restart: always
    image: minio/minio
    container_name: minio
    ports:
      - "443:443"
      - "9001:80"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
      - MINIO_STORAGE_USE_HTTPS=True
      - MLFLOW_TRACKING_INSECURE_TLS=False
    volumes:
      - minio_data:/data
      - ./prebucket.sh:/usr/local/bin/prebucket.sh
      - ./certs:/root/.minio/certs
    entrypoint: /usr/local/bin/prebucket.sh
    healthcheck:
      test: ["CMD", "curl", "--insecure", "https://localhost:443/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - mlops

  db:
    restart: always
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - mlops

  dbadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - mlops

  tracker:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    ports:
      - "80:5000"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_URL=${DB_URL}
      - MLFLOW_S3_ENDPOINT_URL=${S3_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_BUCKET=${MLFLOW_BUCKET}
      - MLFLOW_TRACKING_USERNAME=${MLFLOW_ADMIN_USERNAME}
      - MLFLOW_TRACKING_PASSWORD=${MLFLOW_ADMIN_PASSWORD}
      - MLFLOW_S3_IGNORE_TLS=true
      - MLFLOW_AUTH_CONFIG_PATH=/root/mlflow/auth/basic_auth.ini
    volumes:
      - ./volumes/mlruns:/mlflow/mlruns
      - ./certs:/root/certs
      - ./ini_script.py:/root/mlflow/auth/ini_script.py
    depends_on:
      - s3
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:5000"]
      interval: 30s
      retries: 3
      start_period: 10s
    networks:
      - mlops

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      - tracker
      - s3
    environment:
      MLFLOW_TRACKING_URI: http://tracker:5000
    volumes:
      - ./logs:/app/logs        # Persist logs outside the container
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: always      
    networks:
      - mlops

volumes:
  minio_data:

networks:
  mlops:
    external: true