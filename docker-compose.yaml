services:

  s3:
    restart: always
    image: minio/minio
    container_name: minio
    ports:
      - "443:443"
      - "9001:80"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_STORAGE_USE_HTTPS=True
    volumes:
      - minio_data:/data
      - ./prebucket.sh:/usr/local/bin/prebucket.sh
    entrypoint: /usr/local/bin/prebucket.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:443/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  db: 
    restart: always
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=mlflow
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "{POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  dbadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"

  tracker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    ports:
      - "5001:5000"
    environment:
      - MLFLOW_TRACKING_URI=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/mlflow
      - MLFLOW_S3_ENDPOINT_URL=http://s3:443
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./volumes/mlruns:/mlflow/mlruns
    depends_on:
      - s3
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      retries: 3
      start_period: 10s

  notebook:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
      - MLFLOW_TRACKING_URI=http://tracker:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:443
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./notebooks:/home/jovyan/notebooks
    depends_on:
      - s3
      - db
      - tracker

volumes:
  minio_data: